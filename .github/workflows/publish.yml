name: publish

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.x

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check Version
      run: ${{ github.workspace }}\BuildScripts\CheckVersion.ps1
      shell: pwsh

    - name: Build and Publish
      if: success()
      run: ${{ github.workspace }}\BuildScripts\Publish.ps1
      shell: pwsh

    - name: Get version
      id: get_version
      run: |
        $version = Get-Content -Path version.txt
        echo "::set-output name=VERSION::v$version"
      shell: pwsh

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: List Files Debugging
      run: |
        Get-ChildItem $Env:GITHUB_WORKSPACE
      shell: pwsh

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .\WebpWhack\bin\Releases\*.json
        asset_name: releases.json
        asset_content_type: application/json

    - name: Upload NuGet Packages
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .\WebpWhack\bin\Releases\*.nupkg
        asset_name: package.nupkg
        asset_content_type: application/octet-stream

    - name: Upload Installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .\WebpWhack\bin\Releases\WebpWhack-win-Setup.exe
        asset_name: WebpWhack-win-Setup.exe
        asset_content_type: application/octet-stream

    - name: Upload Portable Zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .\WebpWhack\bin\Releases\WebpWhack-win-Portable.zip
        asset_name: WebpWhack-win-Portable.zip
        asset_content_type: application/zip
